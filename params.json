{
  "name": "RX-HTTP-Request",
  "tagline": "The world-famous HTTP client Request now RxJS compliant and wrote in full ES2015.",
  "body": "# RX-HTTP-Request\r\n\r\n<div style=\"float:right;\">\r\n    <a href=\"https://babeljs.io/docs/learn-es2015/\">\r\n        <img src=\"http://image.slidesharecdn.com/4-es6metbabel-150513100342-lva1-app6891/95/es6-with-babeljs-1-638.jpg\"\r\n             align=\"right\" alt=\"ES2015 logo\" width=\"50\" height=\"50\" />\r\n    </a>\r\n    <a href=\"https://github.com/Reactive-Extensions/RxJS\">\r\n        <img src=\"http://reactivex.io/assets/Rx_Logo_S.png\"\r\n             align=\"right\" alt=\"ReactiveX logo\" width=\"50\" height=\"50\"/>\r\n    </a>\r\n</div>\r\n\r\n[![NPM](https://nodei.co/npm/rx-http-request.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/rx-http-request/)\r\n\r\n[![Build Status](https://travis-ci.org/njl07/rx-http-request.svg?branch=master)](https://travis-ci.org/njl07/rx-http-request)\r\n[![Coverage Status](https://coveralls.io/repos/github/njl07/rx-http-request/badge.svg?branch=master)](https://coveralls.io/github/njl07/rx-http-request?branch=master)\r\n[![Dependencies](https://david-dm.org/njl07/rx-http-request.svg)](https://david-dm.org/njl07/rx-http-request)\r\n[![DevDependencies](https://david-dm.org/njl07/rx-http-request/dev-status.svg)](https://david-dm.org/njl07/rx-http-request#info=devDependencies)\r\n\r\nThe world-famous HTTP client [Request](https://github.com/request/request) now [RxJS](https://github.com/Reactive-Extensions/RxJS) compliant and wrote in full [ES2015](https://babeljs.io/docs/learn-es2015/).\r\n\r\n## Table of contents\r\n\r\n* [Super simple to use](#super-simple-to-use)\r\n* [API in Detail](#api-in-detail)\r\n    * [.request](#request)\r\n    * [.details(options)](#detailsoptions)\r\n    * [.get(uri[,options])](#geturi-options)\r\n        * [Crawl a webpage](#crawl-a-webpage)\r\n        * [GET something from a JSON REST API](#get-something-from-a-json-rest-api)\r\n    * [.post(uri[,options])](#posturi-options)\r\n        * [POST data to a JSON REST API](#post-data-to-a-json-rest-api)\r\n        * [POST like HTML forms do](#post-like-html-forms-do)\r\n    * [.put(uri[,options])](#puturi-options)\r\n    * [.patch(uri[,options])](#patchuri-options)\r\n    * [.delete(uri[,options])](#deleteuri-options)\r\n    * [.head(uri[,options])](#headuri-options)\r\n* [Contributing](#contributing)\r\n* [Change History](#change-history)\r\n* [License](#license)\r\n\r\n## Super simple to use\r\n\r\n**RX-HTTP-Request** is designed to be the simplest way possible to make http calls.\r\n\r\nIt's fully `ES2015` wrotten so you can import it :\r\n\r\n```javascript\r\nimport {RxHttpRequest} from 'rx-http-request';\r\n```\r\n\r\nor use `CommonJS`:\r\n\r\n```javascript\r\nconst RxHttpRequest = require('rx-http-request').RxHttpRequest;\r\n```\r\n\r\nNow, it's easy to perform a `HTTP` request:\r\n\r\n```javascript\r\nRxHttpRequest.get('http://www.google.fr').subscribe(\r\n    (data) => {\r\n\r\n        if (data.response.statusCode === 200) {\r\n            console.log(data.body); // Show the HTML for the Google homepage.\r\n        }\r\n    },\r\n    (err) => console.error(err) // Show error in console\r\n);\r\n```\r\n\r\n## API in Detail\r\n\r\n**RX-HTTP-Request** uses [Request](https://github.com/request/request) **API** to perform calls and returns [RxJS.Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md).\r\n\r\nAll **options** to pass to **API** **methods** can be found [here](https://github.com/request/request#requestoptions-callback).\r\n\r\nAll **methods** to execute on **response object** can be found [here](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#observable-instance-methods).\r\n\r\n--------\r\n\r\n\r\n### `.request`\r\n\r\nReturns the original [Request](https://github.com/request/request#requestoptions-callback) **API** to perform calls without `RxJS.Observable` response but with a **callback method**.\r\n\r\n```javascript\r\nimport {RxHttpRequest} from 'rx-http-request';\r\n\r\nRxHttpRequest.request({uri: 'http://www.google.fr'}, (error, response, body) => {\r\n\r\n    if (!error && response.statusCode == 200) {\r\n        console.log(body); // Show the HTML for the Google homepage.\r\n    }\r\n});\r\n```\r\n\r\n[Back to top](#table-of-contents)\r\n\r\n### `.details(options)`\r\n\r\nThis method **returns a wrapper** around the normal **RX-HTTP-Request API**  that defaults to whatever options you pass to it.\r\n\r\n**Parameters:**\r\n> ***options*** *(required): Original [Request](https://github.com/request/request#requestoptions-callback) `options` object with default values foreach next requests*\r\n\r\n**Response:**\r\n> ***new*** *`RxHttpRequest` instance*\r\n\r\n**Note:** `RxHttpRequest.defaults()` **does not** modify the global API; instead, it returns a wrapper that has your default settings applied to it.\r\n\r\n**Note:** You can call `.defaults()` on the wrapper that is returned from `RxHttpRequest.defaults()` to add/override defaults that were previously defaulted.\r\n\r\nFor example:\r\n \r\n```javascript\r\n// requests using baseRequest will set the 'x-token' header\r\nconst baseRequest = RxHttpRequest.defaults({\r\n    headers: {'x-token': 'my-token'}\r\n});\r\n\r\n// requests using specialRequest will include the 'x-token' header set in\r\n// baseRequest and will also include the 'special' header\r\nconst specialRequest = baseRequest.defaults({\r\n    headers: {special: 'special value'}\r\n});\r\n```\r\n\r\n[Back to top](#table-of-contents)\r\n\r\n### `.get(uri[, options])`\r\n\r\nPerforms a request with `get` http method.\r\n\r\n**Parameters:**\r\n> - ***uri*** *(required): The `uri` where request will be performed*\r\n> - ***options*** *(optional): Original [Request](https://github.com/request/request#requestoptions-callback) `options` object*\r\n\r\n**Response:**\r\n> *[RxJS.Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md) instance*\r\n\r\n#### Crawl a webpage\r\n\r\n```javascript\r\nimport {RxHttpRequest} from 'rx-http-request';\r\n\r\nRxHttpRequest.get('http://www.google.fr').subscribe(\r\n    (data) => {\r\n\r\n        if (data.response.statusCode === 200) {\r\n            console.log(data.body); // Show the HTML for the Google homepage.\r\n        }\r\n    },\r\n    (err) => console.error(err) // Show error in console\r\n);\r\n```\r\n\r\n#### GET something from a JSON REST API\r\n     \r\n```javascript\r\nimport {RxHttpRequest} from 'rx-http-request';\r\n\r\nconst options = {\r\n    qs: {\r\n        access_token: 'xxxxx xxxxx' // -> uri + '?access_token=xxxxx%20xxxxx'\r\n    },\r\n    headers: {\r\n        'User-Agent': 'RX-HTTP-Request'\r\n    },\r\n    json: true // Automatically parses the JSON string in the response\r\n};\r\n\r\nRxHttpRequest.get('https://api.github.com/user/repos', options).subscribe(\r\n    (data) => {\r\n\r\n        if (data.response.statusCode === 200) {\r\n            console.log(data.body); // Show the JSON response object.\r\n        }\r\n    },\r\n    (err) => console.error(err) // Show error in console\r\n);\r\n```\r\n\r\n[Back to top](#table-of-contents)\r\n\r\n### `.post(uri[, options])`\r\n\r\nPerforms a request with `post` http method.\r\n\r\n**Parameters:**\r\n> - ***uri*** *(required): The `uri` where request will be performed*\r\n> - ***options*** *(optional): Original [Request](https://github.com/request/request#requestoptions-callback) `options` object*\r\n\r\n**Response:**\r\n> *[RxJS.Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md) instance*\r\n\r\n#### POST data to a JSON REST API\r\n\r\n```javascript\r\nimport {RxHttpRequest} from 'rx-http-request';\r\n\r\nconst options = {\r\n    body: {\r\n        some: 'payload'\r\n    },\r\n    json: true // Automatically stringifies the body to JSON\r\n};\r\n\r\nRxHttpRequest.post('http://posttestserver.com/posts', options).subscribe(\r\n    (data) => {\r\n\r\n        if (data.response.statusCode === 201) {\r\n            console.log(data.body); // Show the JSON response object.\r\n        }\r\n    },\r\n    (err) => console.error(err) // Show error in console\r\n);\r\n```\r\n\r\n#### POST like HTML forms do\r\n\r\n```javascript\r\nimport {RxHttpRequest} from 'rx-http-request';\r\n\r\nconst options = {\r\n    form: {\r\n        some: 'payload' // Will be urlencoded\r\n    },\r\n    headers: {\r\n        /* 'content-type': 'application/x-www-form-urlencoded' */ // Set automatically\r\n    }\r\n};\r\n\r\nRxHttpRequest.post('http://posttestserver.com/posts', options).subscribe(\r\n    (data) => {\r\n\r\n        if (data.response.statusCode === 201) {\r\n            console.log(data.body); // POST succeeded...\r\n        }\r\n    },\r\n    (err) => console.error(err) // Show error in console\r\n);\r\n```\r\n\r\n[Back to top](#table-of-contents)\r\n\r\n### `.put(uri[, options])`\r\n\r\nPerforms a request with `put` http method.\r\n\r\n**Parameters:**\r\n> - ***uri*** *(required): The `uri` where request will be performed*\r\n> - ***options*** *(optional): Original [Request](https://github.com/request/request#requestoptions-callback) `options` object*\r\n\r\n**Response:**\r\n> *[RxJS.Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md) instance*\r\n\r\n```javascript\r\nimport {RxHttpRequest} from 'rx-http-request';\r\n\r\nRxHttpRequest.put(uri).subscribe(...);\r\n```\r\n\r\n[Back to top](#table-of-contents)\r\n\r\n### `.patch(uri[, options])`\r\n\r\nPerforms a request with `patch` http method.\r\n\r\n**Parameters:**\r\n> - ***uri*** *(required): The `uri` where request will be performed*\r\n> - ***options*** *(optional): Original [Request](https://github.com/request/request#requestoptions-callback) `options` object*\r\n\r\n**Response:**\r\n> *[RxJS.Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md) instance*\r\n\r\n```javascript\r\nimport {RxHttpRequest} from 'rx-http-request';\r\n\r\nRxHttpRequest.patch(uri).subscribe(...);\r\n```\r\n\r\n[Back to top](#table-of-contents)\r\n\r\n### `.delete(uri[, options])`\r\n\r\nPerforms a request with `delete` http method.\r\n\r\n**Parameters:**\r\n> - ***uri*** *(required): The `uri` where request will be performed*\r\n> - ***options*** *(optional): Original [Request](https://github.com/request/request#requestoptions-callback) `options` object*\r\n\r\n**Response:**\r\n> *[RxJS.Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md) instance*\r\n\r\n```javascript\r\nimport {RxHttpRequest} from 'rx-http-request';\r\n\r\nRxHttpRequest.delete(uri).subscribe(...);\r\n```\r\n\r\n[Back to top](#table-of-contents)\r\n\r\n### `.head(uri[, options])`\r\n\r\n**Parameters:**\r\n> - ***uri*** *(required): The `uri` where request will be performed*\r\n> - ***options*** *(optional): Original [Request](https://github.com/request/request#requestoptions-callback) `options` object*\r\n\r\n**Response:**\r\n> *[RxJS.Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md) instance*\r\n\r\nPerforms a request with `head` http method.\r\n\r\n```javascript\r\nimport {RxHttpRequest} from 'rx-http-request';\r\n\r\nRxHttpRequest.head(uri).subscribe(...);\r\n```\r\n\r\n[Back to top](#table-of-contents)\r\n\r\n## Contributing\r\n\r\nTo set up your development environment:\r\n\r\n1. clone the repo to your workspace,\r\n2. in the shell `cd` to the main folder,\r\n3. hit `npm install`,\r\n4. hit `npm install gulp -g` if you haven't installed gulp globally yet, and\r\n5. run `gulp`. (Or run node ./node_modules/.bin/gulp if you don't want to install gulp globally.)\r\n\r\n`gulp` watches all source files and if you save some changes it will lint the code and execute all tests. The test coverage report can be viewed from `./coverage/lcov-report/index.html`.\r\n\r\n[Back to top](#table-of-contents)\r\n\r\n## Change History\r\n\r\n* v1.0.0 (2016-03-27)\r\n    * Carefully rewritten from scratch to make RX-HTTP-Request a drop-in replacement for Request\r\n    \r\n[Back to top](#table-of-contents)\r\n\r\n## License\r\n\r\nCopyright (c) 2016 **Nicolas Jessel** Licensed under the [MIT license](https://github.com/njl07/rx-http-request/tree/master/LICENSE.md).\r\n\r\n[Back to top](#table-of-contents)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}